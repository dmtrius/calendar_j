worker_processes  1;

events {
    worker_connections 1024;
}

http {
	include       mime.types;
    default_type  application/octet-stream;
	
	proxy_ssl_server_name on;
	proxy_ssl_verify off;

    server {
        listen       8889;
        server_name  localhost;
		
		# Dynamic CORS origin
		set $cors_origin "";
		if ($http_origin ~* "^http://localhost:8000$") {
			set $cors_origin $http_origin;
		}

        # Proxy to the remote host
        location /api/ {
			proxy_hide_header Access-Control-Allow-Origin;
            # Add CORS headers
			add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
			add_header 'Access-Control-Allow-Credentials' 'true' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

			# Handle preflight (OPTIONS) requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
				add_header 'Access-Control-Allow-Credentials' 'true' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
				add_header 'Access-Control-Max-Age' 1728000;
				add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			
			# Proxy to your backend or serve directly
			proxy_pass http://localhost:8080;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			
			# Ensure errors also include CORS headers
            proxy_intercept_errors on;
            error_page 400 401 403 404 415 500 502 503 504 @error;
        }
		
		location /proxy/ {
			proxy_hide_header Access-Control-Allow-Origin;
            # Add CORS headers
			add_header 'Access-Control-Allow-Origin' 'http://localhost:8000' always;
			#add_header 'Access-Control-Allow-Credentials' 'true' always;
			add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
			add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

			# Handle preflight (OPTIONS) requests
			if ($request_method = 'OPTIONS') {
				add_header 'Access-Control-Allow-Origin' 'http://localhost:8000' always;
				#add_header 'Access-Control-Allow-Credentials' 'true' always;
				add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
				add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
				add_header 'Access-Control-Max-Age' 1728000;
				#add_header 'Content-Type' 'text/plain charset=UTF-8';
				add_header 'Content-Length' 0;
				return 204;
			}
			
			# Proxy to your backend or serve directly
			proxy_pass https://cmap.jud11.flcourts.org/jisws/jisService/v100/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Content-Type "application/json";
			
			# Ensure errors also include CORS headers
            proxy_intercept_errors on;
            error_page 400 401 403 404 415 500 502 503 504 @error;			
		}
		
		# Custom error handling to include CORS headers
		location @error {
            # Add CORS headers for error responses
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;

            # Return the original upstream status with a custom message
            default_type text/plain;
            return 502 "Error from upstream server: $upstream_status";
        }
	}
}
